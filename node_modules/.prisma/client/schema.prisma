generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum TipoUsuario {
  ADMIN
  CLIENTE
  TRABAJADOR
}

enum TipoServicio {
  POR_HORA
  POR_CANTIDAD
}

model Usuario {
  id             Int            @id @default(autoincrement())
  nombre         String
  email          String         @unique
  contrasena     String
  tipo           TipoUsuario
  cliente        Cliente?
  trabajador     Trabajador?
  notificaciones Notificacion[]
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  createdBy      Int?
}

model Cliente {
  id        Int     @id @default(autoincrement())
  usuario   Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId Int     @unique
  direccion String
  telefono  String
  ordenes   Orden[]
}

model Trabajador {
  id           Int     @id @default(autoincrement())
  usuario      Usuario @relation(fields: [usuarioId], references: [id])
  usuarioId    Int     @unique
  posicion     String
  departamento String
}

model Servicio {
  id            Int             @id @default(autoincrement())
  nombre        String
  descripcion   String
  precioBase    Float
  duracionHoras Int             @default(1)
  tipo          TipoServicio
  estado        String          @default("ACTIVO")
  ordenes       OrdenServicio[]
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
}

model Orden {
  id        Int             @id @default(autoincrement())
  cliente   Cliente         @relation(fields: [clienteId], references: [id])
  clienteId Int
  fecha     DateTime        @default(now())
  estado    String
  servicios OrdenServicio[]
  factura   Factura?
}

model OrdenServicio {
  id             Int      @id @default(autoincrement())
  orden          Orden    @relation(fields: [ordenId], references: [id])
  ordenId        Int
  servicio       Servicio @relation(fields: [servicioId], references: [id])
  servicioId     Int
  cantidad       Int
  precioUnitario Float
}

model Factura {
  id       Int      @id @default(autoincrement())
  orden    Orden    @relation(fields: [ordenId], references: [id])
  ordenId  Int      @unique
  fecha    DateTime @default(now())
  subtotal Float
  total    Float
}

model Notificacion {
  id        Int      @id @default(autoincrement())
  usuario   Usuario  @relation(fields: [usuarioId], references: [id])
  usuarioId Int
  mensaje   String
  fecha     DateTime @default(now())
  leida     Boolean  @default(false)
}
